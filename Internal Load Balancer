TASK 1

gcloud config list project

gcloud config set compute/region REGION
gcloud config set compute/zone ZONE

export REGION=REGION

export ZONE=ZONE

sudo apt-get install -y virtualenv

python3 -m venv venv

source venv/bin/activate

TASK 2

touch ~/backend.sh

*****************************************

gcloud compute instance-templates create primecalc \
--metadata-from-file startup-script=backend.sh \
--no-address --tags backend --machine-type=e2-medium

gcloud compute firewall-rules create http --network default --allow=tcp:80 \
--source-ranges IP --target-tags backend

gcloud compute instance-groups managed create backend \
--size 3 \
--template primecalc \
--zone $ZONE

gcloud compute instance-groups managed set-autoscaling backend \
--target-cpu-utilization 0.8 --min-num-replicas 3 \
--max-num-replicas 10 --zone $ZONE

TASK 3

gcloud compute health-checks create http ilb-health --request-path /2

gcloud compute backend-services create prime-service \
--load-balancing-scheme internal --region=$REGION \
--protocol tcp --health-checks ilb-health

gcloud compute backend-services add-backend prime-service \
--instance-group backend --instance-group-zone=$ZONE \
--region=$REGION

gcloud compute forwarding-rules create prime-lb \
--load-balancing-scheme internal \
--ports 80 --network default \
--region=$REGION --address IP \
--backend-service prime-service

TASK 4

gcloud compute instances create testinstance \
--machine-type=e2-standard-2 --zone $ZONE

gcloud compute ssh testinstance --zone $ZONE

curl IP/2
curl IP/4
curl IP/5
exit
gcloud compute instances delete testinstance --zone=$ZONE

TASK 5

touch ~/frontend.sh

***************************************************

gcloud compute instances create frontend --zone=$ZONE \
--metadata-from-file startup-script=frontend.sh \
--tags frontend --machine-type=e2-standard-2

gcloud compute firewall-rules create http2 --network default --allow=tcp:80 \
--source-ranges 0.0.0.0/0 --target-tags frontend




